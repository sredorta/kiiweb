@import '~@angular/material/theming';

// mixin name will be used in main style.scss
@mixin blog-theme($theme) {
  
  // retrieve variables from theme 
  // (all possible variables, use only what you really need)
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background:map-get($theme,background);
  $is-dark-theme: map-get($theme, is-dark);

kii-blog {
  //MOBILE
  .wrapper-content {
    display:flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    width:100%;
  }
  
  kii-share button {
    transition: 0.3s ease-in-out;
    opacity: 0.2;
    filter:grayscale(100%);
  }

  .element {
    max-width: 400px;
  }

  //DESKTOP
  @media only screen and (min-width: 600px) { 
    .element {
      max-width: 280px;
    }
  }

//HOVER PART
    //Desktops
    @media (pointer: fine)  { 
      .element:hover {
        kii-share button {
          opacity: 0.8;
          filter:grayscale(0%);
        }
      }
    }  
    //Tablets and phones
    @media (pointer: coarse) {
      .element.kii-appear {
        kii-share button {
          opacity: 0.8;
          filter:grayscale(0%);
        }
      }
    }  


} //End kii-blog
} //end mixin



@mixin truncate-text($lh,$maxLines) {
    position: relative;
    height: calc(#{$lh} * #{$maxLines});
    line-height: $lh;
    overflow: hidden;
    padding-right: 1rem; 
    display: inline-block;

  &:after {
    position: absolute;
    content: "";
    height: $lh;
    width:100%;;
    bottom:0;
    left:0;
    inset-block-end:0;
    background: linear-gradient(to right, rgba(mat-color(mat-palette($mat-grey,50)),0), rgba(mat-color(mat-palette($mat-grey,50)),1) 50%);
  }
}
